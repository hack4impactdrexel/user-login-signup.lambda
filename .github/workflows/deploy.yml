name: Lint, Format, and Deploy to Lambda
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read
  packages: read
  statuses: write

jobs:
  lint-and-format:
    name: Lint and Format Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Super-Linter with Auto-Fix
        uses: super-linter/super-linter@v7.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: ${{ github.event.pull_request.base.ref }}
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_PYLINT: true
          VALIDATE_YAML: false
          VALIDATE_JSON: true
          VALIDATE_JSON_PRETTIER: true
          VALIDATE_YAML_PRETTIER: true
          VALIDATE_MARKDOWN_PRETTIER: true
          VALIDATE_GITHUB_ACTIONS: false
          FIX_PYTHON_BLACK: true
          FIX_YAML_PRETTIER: false
          FIX_JSON_PRETTIER: true
          FIX_MARKDOWN_PRETTIER: true

      - name: Commit and Push Auto-Fixed Code
        if: github.event_name == 'pull_request'
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "Auto-fix code formatting [skip ci]"
            git push
          fi

  deploy:
    name: Deploy to Lambda
    needs: lint-and-format
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:lambda:us-east-1:375785164899:function:UserAuthenticationLoginCognito-Lambda
          aws-region: us-east-1

      - name: Test AWS Connection
        run: aws sts get-caller-identity

      - name: Deploy to Lambda
        run: |
          cd src
          zip lambda-function.zip main.py
          aws lambda update-function-code \
            --function-name UserAuthenticationLoginCognito-Lambda \
            --zip-file fileb://lambda-function.zip